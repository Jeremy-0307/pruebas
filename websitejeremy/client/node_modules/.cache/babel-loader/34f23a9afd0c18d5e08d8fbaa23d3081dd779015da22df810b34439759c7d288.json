{"ast":null,"code":"var _jsxFileName = \"/home/jeremy/websitejeremy/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport validarInput from './validar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let ver = true;\n  {/*variables para verificar*/}\n  const [empresaNombre, setEmpresaNombre] = useState(\"\");\n  const [empresaNombreErr, setEmpresaNombreErr] = useState(false);\n  const [empresaEmail, setEmpresaEmail] = useState(\"\");\n  const [empresaEmailErr, setEmpresaEmailErr] = useState(false);\n  const [empresaEmail2, setEmpresaEmail2] = useState(\"\");\n  const [empresaEmailErr2, setEmpresaEmailErr2] = useState(true);\n  const [empresaTel, setEmpresaTel] = useState(\"\");\n  const [empresaTelErr, setEmpresaTelErr] = useState(false);\n  const [empresaTel2, setEmpresaTel2] = useState(\"\");\n  const [empresaTelErr2, setEmpresaTelErr2] = useState(true);\n  const [empresaCedu, setEmpresaCedu] = useState(\"\");\n  const [empresaCeduErr, setEmpresaCeduErr] = useState(false);\n  {/*funcion para verificar datos*/}\n  const datosValidos = () => {\n    {/*nombre*/}\n    const nombreRegex = /^([a-zA-Z0-9\\&\\-\\_\\.]{3,}[a-zA-Z0-9\\ \\&\\-\\_\\.]*)$/;\n    const isNameValid = validarInput(nombreRegex, empresaNombre);\n    setEmpresaNombreErr(isNameValid ? false : true);\n    {/*email */}\n    const emailRegex = /^([a-zA-Z0-9\\@\\_\\-\\.\\%]+@[a-zA-Z0-9\\_\\-\\.]+\\.[a-zA-Z]{2,})$/;\n    const isEmailValid = validarInput(emailRegex, empresaEmail);\n    setEmpresaEmailErr(isEmailValid ? false : true);\n    {/*email optional*/}\n    empresaEmail2.trim() !== \"\" ? setEmpresaEmailErr2(validarInput(emailRegex, empresaEmail2) ? false : true) : setEmpresaEmailErr2(false);\n    {/*telefono*/}\n    const telRegex = /^([876][0-9]{3}\\-[0-9]{4})$/;\n    const isTelValid = validarInput(telRegex, empresaTel);\n    setEmpresaTelErr(isTelValid ? false : true);\n    {/*tel optional*/}\n    empresaTel2.trim() !== \"\" ? setEmpresaTelErr2(validarInput(telRegex, empresaTel2) ? false : true) : setEmpresaTelErr2(false);\n    const ceduRegex = /^([0-9]{10})$/;\n    const isCeduValid = validarInput(ceduRegex, empresaCedu);\n    setEmpresaCeduErr(isCeduValid ? false : true);\n    ver = false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"An invisible div element:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      hidden: true,\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Registration Successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"We will email your entry passes to the Louvre Museum in Paris.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4xarbxpWg2RmDUEMse6zAthCPOk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","validarInput","jsxDEV","_jsxDEV","App","_s","ver","empresaNombre","setEmpresaNombre","empresaNombreErr","setEmpresaNombreErr","empresaEmail","setEmpresaEmail","empresaEmailErr","setEmpresaEmailErr","empresaEmail2","setEmpresaEmail2","empresaEmailErr2","setEmpresaEmailErr2","empresaTel","setEmpresaTel","empresaTelErr","setEmpresaTelErr","empresaTel2","setEmpresaTel2","empresaTelErr2","setEmpresaTelErr2","empresaCedu","setEmpresaCedu","empresaCeduErr","setEmpresaCeduErr","datosValidos","nombreRegex","isNameValid","emailRegex","isEmailValid","trim","telRegex","isTelValid","ceduRegex","isCeduValid","children","fileName","_jsxFileName","lineNumber","columnNumber","hidden","_c","$RefreshReg$"],"sources":["/home/jeremy/websitejeremy/frontend/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport validarInput from './validar'\n\n\n\n\nfunction App() {\n  let ver = true;\n  {/*variables para verificar*/}\n  const [empresaNombre, setEmpresaNombre] = useState(\"\");\n  const [empresaNombreErr, setEmpresaNombreErr] = useState(false);\n\n  const [empresaEmail, setEmpresaEmail] = useState(\"\");\n  const [empresaEmailErr, setEmpresaEmailErr] = useState(false);\n\n  const [empresaEmail2, setEmpresaEmail2] = useState(\"\");\n  const [empresaEmailErr2, setEmpresaEmailErr2] = useState(true);\n\n  const [empresaTel, setEmpresaTel] = useState(\"\");\n  const [empresaTelErr, setEmpresaTelErr] = useState(false);\n\n  const [empresaTel2, setEmpresaTel2] = useState(\"\");\n  const [empresaTelErr2, setEmpresaTelErr2] = useState(true);\n\n  const [empresaCedu, setEmpresaCedu] = useState(\"\");\n  const [empresaCeduErr, setEmpresaCeduErr] = useState(false);\n\n  {/*funcion para verificar datos*/}\n  const datosValidos = () => {\n\n\n    {/*nombre*/}\n    const nombreRegex = /^([a-zA-Z0-9\\&\\-\\_\\.]{3,}[a-zA-Z0-9\\ \\&\\-\\_\\.]*)$/\n    const isNameValid = validarInput(nombreRegex, empresaNombre);\n    setEmpresaNombreErr(isNameValid? false : true);\n\n    {/*email */}\n    const emailRegex = /^([a-zA-Z0-9\\@\\_\\-\\.\\%]+@[a-zA-Z0-9\\_\\-\\.]+\\.[a-zA-Z]{2,})$/\n    const isEmailValid = validarInput(emailRegex, empresaEmail);\n    setEmpresaEmailErr(isEmailValid ? false : true);\n\n    {/*email optional*/}\n    empresaEmail2.trim() !== \"\"\n      ? setEmpresaEmailErr2(validarInput(emailRegex, empresaEmail2) ? false : true)\n      : setEmpresaEmailErr2(false);\n\n    {/*telefono*/}\n    const telRegex = /^([876][0-9]{3}\\-[0-9]{4})$/\n    const isTelValid = validarInput(telRegex, empresaTel);\n    setEmpresaTelErr(isTelValid? false : true);\n\n    {/*tel optional*/}\n    empresaTel2.trim() !== \"\"\n      ? setEmpresaTelErr2(validarInput(telRegex, empresaTel2) ? false : true)\n      : setEmpresaTelErr2(false);\n\n    const ceduRegex = /^([0-9]{10})$/\n    const isCeduValid = validarInput(ceduRegex, empresaCedu);\n    setEmpresaCeduErr(isCeduValid? false : true);\n    ver = false;\n  };\n\n  return (\n    <div>\n      <p>An invisible div element:</p>\n        {<div hidden>\n         <b>Registration Successful!</b>\n          <p>We will email your entry passes to the Louvre Museum in Paris.</p>\n        </div>}\n    </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,aAAa;AACpB,OAAO,kCAAkC;AACzC,OAAOC,YAAY,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAIC,GAAG,GAAG,IAAI;EACd,CAAC;EACD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAE3D,CAAC;EACD,MAAM+B,YAAY,GAAGA,CAAA,KAAM;IAGzB,CAAC;IACD,MAAMC,WAAW,GAAG,mDAAmD;IACvE,MAAMC,WAAW,GAAGhC,YAAY,CAAC+B,WAAW,EAAEzB,aAAa,CAAC;IAC5DG,mBAAmB,CAACuB,WAAW,GAAE,KAAK,GAAG,IAAI,CAAC;IAE9C,CAAC;IACD,MAAMC,UAAU,GAAG,6DAA6D;IAChF,MAAMC,YAAY,GAAGlC,YAAY,CAACiC,UAAU,EAAEvB,YAAY,CAAC;IAC3DG,kBAAkB,CAACqB,YAAY,GAAG,KAAK,GAAG,IAAI,CAAC;IAE/C,CAAC;IACDpB,aAAa,CAACqB,IAAI,CAAC,CAAC,KAAK,EAAE,GACvBlB,mBAAmB,CAACjB,YAAY,CAACiC,UAAU,EAAEnB,aAAa,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,GAC3EG,mBAAmB,CAAC,KAAK,CAAC;IAE9B,CAAC;IACD,MAAMmB,QAAQ,GAAG,6BAA6B;IAC9C,MAAMC,UAAU,GAAGrC,YAAY,CAACoC,QAAQ,EAAElB,UAAU,CAAC;IACrDG,gBAAgB,CAACgB,UAAU,GAAE,KAAK,GAAG,IAAI,CAAC;IAE1C,CAAC;IACDf,WAAW,CAACa,IAAI,CAAC,CAAC,KAAK,EAAE,GACrBV,iBAAiB,CAACzB,YAAY,CAACoC,QAAQ,EAAEd,WAAW,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,GACrEG,iBAAiB,CAAC,KAAK,CAAC;IAE5B,MAAMa,SAAS,GAAG,eAAe;IACjC,MAAMC,WAAW,GAAGvC,YAAY,CAACsC,SAAS,EAAEZ,WAAW,CAAC;IACxDG,iBAAiB,CAACU,WAAW,GAAE,KAAK,GAAG,IAAI,CAAC;IAC5ClC,GAAG,GAAG,KAAK;EACb,CAAC;EAED,oBACEH,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAAsC,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC7B1C,OAAA;MAAK2C,MAAM;MAAAL,QAAA,gBACXtC,OAAA;QAAAsC,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9B1C,OAAA;QAAAsC,QAAA,EAAG;MAA8D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGV;AAACxC,EAAA,CAlEQD,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AAoEZ,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}