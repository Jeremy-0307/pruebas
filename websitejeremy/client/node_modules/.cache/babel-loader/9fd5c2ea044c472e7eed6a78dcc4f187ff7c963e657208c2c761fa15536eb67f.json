{"ast":null,"code":"var _jsxFileName = \"/home/jeremy/websitejeremy/frontend/src/components/FormInput.jsx\";\nimport { useState } from \"react\";\nimport \"./formInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormInput = props => {\n  const {\n    errorMessage,\n    onChange,\n    id,\n    boolError,\n    ...inputProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: `form-control form-control-lg${boolError ? ' is-invalid' : ''}`,\n      ...inputProps,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), boolError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = FormInput;\nconst handleSubmit = (inputs, formData, setErrForm, errForm) => {\n  const updatedErrForm = {};\n  inputs.forEach(input => {\n    if (input.required && CheckRegex(formData[input.name], input.patron)) {\n      updatedErrForm[input.name] = false;\n    } else if (!input.required && (formData[input.name] === '' || CheckRegex(formData[input.name], input.patron))) {\n      updatedErrForm[input.name] = false;\n    } else {\n      updatedErrForm[input.name] = true;\n    }\n  });\n  //setErrForm(updatedErrForm);\n  const hasError = Object.values(updatedErrForm).some(value => value === true);\n  return hasError;\n};\nconst CheckRegex = (value, pattern) => {\n  return pattern.test(value);\n};\n_c2 = CheckRegex;\nexport default FormInput;\nexport { CheckRegex };\nexport { handleSubmit };\nvar _c, _c2;\n$RefreshReg$(_c, \"FormInput\");\n$RefreshReg$(_c2, \"CheckRegex\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","FormInput","props","errorMessage","onChange","id","boolError","inputProps","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","handleSubmit","inputs","formData","setErrForm","errForm","updatedErrForm","forEach","input","required","CheckRegex","name","patron","hasError","Object","values","some","value","pattern","test","_c2","$RefreshReg$"],"sources":["/home/jeremy/websitejeremy/frontend/src/components/FormInput.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./formInput.css\";\n\nconst FormInput = (props) => {\n  const {errorMessage, onChange, id, boolError, ...inputProps } = props;\n\n return (\n    <div className=\"mb-3\">\n      <input\n        className={`form-control form-control-lg${boolError ? ' is-invalid' : ''}`}\n        {...inputProps}\n        onChange={onChange}\n      />\n      {boolError && <div className=\"invalid-feedback\">{errorMessage}</div>}\n    </div>\n  );\n};\n\nconst handleSubmit = (inputs, formData, setErrForm, errForm) => {\n  const updatedErrForm = {};\n  inputs.forEach((input) => {\n    if (input.required && CheckRegex(formData[input.name], input.patron)) {\n      updatedErrForm[input.name] = false;\n    } else if (!input.required && (formData[input.name] === '' || CheckRegex(formData[input.name], input.patron))) {\n      updatedErrForm[input.name] = false;\n    } else {\n      updatedErrForm[input.name] = true;\n    }\n  });\n  //setErrForm(updatedErrForm);\n  const hasError = Object.values(updatedErrForm).some((value) => value === true);\n  return hasError;\n};\n\nconst CheckRegex = (value, pattern) => {\n  return pattern.test(value);\n}\n\nexport default FormInput;\nexport { CheckRegex };\nexport { handleSubmit };"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAC3B,MAAM;IAACC,YAAY;IAAEC,QAAQ;IAAEC,EAAE;IAAEC,SAAS;IAAE,GAAGC;EAAW,CAAC,GAAGL,KAAK;EAEtE,oBACGF,OAAA;IAAKQ,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBT,OAAA;MACEQ,SAAS,EAAG,+BAA8BF,SAAS,GAAG,aAAa,GAAG,EAAG,EAAE;MAAA,GACvEC,UAAU;MACdH,QAAQ,EAAEA;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,EACDP,SAAS,iBAAIN,OAAA;MAAKQ,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAEN;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV,CAAC;AAACC,EAAA,GAbIb,SAAS;AAef,MAAMc,YAAY,GAAGA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,OAAO,KAAK;EAC9D,MAAMC,cAAc,GAAG,CAAC,CAAC;EACzBJ,MAAM,CAACK,OAAO,CAAEC,KAAK,IAAK;IACxB,IAAIA,KAAK,CAACC,QAAQ,IAAIC,UAAU,CAACP,QAAQ,CAACK,KAAK,CAACG,IAAI,CAAC,EAAEH,KAAK,CAACI,MAAM,CAAC,EAAE;MACpEN,cAAc,CAACE,KAAK,CAACG,IAAI,CAAC,GAAG,KAAK;IACpC,CAAC,MAAM,IAAI,CAACH,KAAK,CAACC,QAAQ,KAAKN,QAAQ,CAACK,KAAK,CAACG,IAAI,CAAC,KAAK,EAAE,IAAID,UAAU,CAACP,QAAQ,CAACK,KAAK,CAACG,IAAI,CAAC,EAAEH,KAAK,CAACI,MAAM,CAAC,CAAC,EAAE;MAC7GN,cAAc,CAACE,KAAK,CAACG,IAAI,CAAC,GAAG,KAAK;IACpC,CAAC,MAAM;MACLL,cAAc,CAACE,KAAK,CAACG,IAAI,CAAC,GAAG,IAAI;IACnC;EACF,CAAC,CAAC;EACF;EACA,MAAME,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAACT,cAAc,CAAC,CAACU,IAAI,CAAEC,KAAK,IAAKA,KAAK,KAAK,IAAI,CAAC;EAC9E,OAAOJ,QAAQ;AACjB,CAAC;AAED,MAAMH,UAAU,GAAGA,CAACO,KAAK,EAAEC,OAAO,KAAK;EACrC,OAAOA,OAAO,CAACC,IAAI,CAACF,KAAK,CAAC;AAC5B,CAAC;AAAAG,GAAA,GAFKV,UAAU;AAIhB,eAAevB,SAAS;AACxB,SAASuB,UAAU;AACnB,SAAST,YAAY;AAAG,IAAAD,EAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}