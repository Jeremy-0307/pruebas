{"ast":null,"code":"var _jsxFileName = \"/home/jeremy/websitejeremy/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Definición de estado inicial: Inicializa 'backendData' como una matriz que contiene un objeto vacío.\n  const [backendData, setBackendData] = useState([{}]);\n\n  // Efecto de carga: Se ejecuta cuando el componente se monta.\n  useEffect(() => {\n    // Realiza una solicitud GET a la ruta \"/api\" en el servidor.\n    fetch(\"/api\")\n    // Convierte la respuesta en formato JSON.\n    .then(response => response.json()).then(data => {\n      // Actualiza el estado 'backendData' con los datos recibidos de la API.\n      setBackendData(data);\n    });\n  }, []); // El segundo argumento vacío [] asegura que el efecto se ejecute solo una vez al montar el componente.\n\n  // Renderizado condicional: Muestra diferentes elementos en función del estado de 'backendData'.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: typeof backendData.user === 'undefined' ?\n    /*#__PURE__*/\n    // Si 'backendData.user' es indefinido, muestra el mensaje \"Loading...\" en un elemento <p>.\n    _jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) :\n    // Si 'backendData.user' está definido, mapea los usuarios y muestra cada uno en un elemento <p>.\n    backendData.user.map((user, i) =>\n    /*#__PURE__*/\n    // Usamos 'key' para proporcionar una clave única a cada elemento del mapeo.\n    _jsxDEV(\"p\", {\n      children: user\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n// Exportamos el componente 'App' como el componente predeterminado de este módulo.\n_s(App, \"lSbdPEQgG/af9fOvqlnzEvHwb4Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","backendData","setBackendData","fetch","then","response","json","data","children","user","fileName","_jsxFileName","lineNumber","columnNumber","map","i","_c","$RefreshReg$"],"sources":["/home/jeremy/websitejeremy/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction App() {\n  // Definición de estado inicial: Inicializa 'backendData' como una matriz que contiene un objeto vacío.\n  const [backendData, setBackendData] = useState([{}]);\n\n  // Efecto de carga: Se ejecuta cuando el componente se monta.\n  useEffect(() => {\n    // Realiza una solicitud GET a la ruta \"/api\" en el servidor.\n    fetch(\"/api\")\n      // Convierte la respuesta en formato JSON.\n      .then(response => response.json())\n      .then(data => {\n        // Actualiza el estado 'backendData' con los datos recibidos de la API.\n        setBackendData(data);\n      });\n  }, []); // El segundo argumento vacío [] asegura que el efecto se ejecute solo una vez al montar el componente.\n\n  // Renderizado condicional: Muestra diferentes elementos en función del estado de 'backendData'.\n  return (\n    <div>\n      {/* Usamos una expresión condicional para verificar si 'backendData.user' es indefinido. */}\n      {(typeof backendData.user === 'undefined') ? (\n        // Si 'backendData.user' es indefinido, muestra el mensaje \"Loading...\" en un elemento <p>.\n        <p>Loading...</p>\n      ) : (\n        // Si 'backendData.user' está definido, mapea los usuarios y muestra cada uno en un elemento <p>.\n        backendData.user.map((user, i) => (\n          // Usamos 'key' para proporcionar una clave única a cada elemento del mapeo.\n          <p key={i}>{user}</p>\n        ))\n      )}\n    </div>\n  );\n}\n\n// Exportamos el componente 'App' como el componente predeterminado de este módulo.\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEpD;EACAD,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,MAAM;IACV;IAAA,CACCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAL,cAAc,CAACK,IAAI,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,oBACET,OAAA;IAAAU,QAAA,EAEI,OAAOP,WAAW,CAACQ,IAAI,KAAK,WAAW;IAAA;IACvC;IACAX,OAAA;MAAAU,QAAA,EAAG;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;IAEjB;IACAZ,WAAW,CAACQ,IAAI,CAACK,GAAG,CAAC,CAACL,IAAI,EAAEM,CAAC;IAAA;IAC3B;IACAjB,OAAA;MAAAU,QAAA,EAAYC;IAAI,GAARM,CAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CACrB;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;;AAEA;AAAAb,EAAA,CAlCSD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}